Traceback (most recent call last):
  File "/home/lorenzf/git/data-science-practical-approach/venv/lib/python3.8/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/home/lorenzf/git/data-science-practical-approach/venv/lib/python3.8/site-packages/nbclient/client.py", line 1117, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/home/lorenzf/git/data-science-practical-approach/venv/lib/python3.8/site-packages/nbclient/util.py", line 78, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/home/lorenzf/git/data-science-practical-approach/venv/lib/python3.8/site-packages/nbclient/util.py", line 57, in just_run
    return loop.run_until_complete(coro)
  File "/usr/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/home/lorenzf/git/data-science-practical-approach/venv/lib/python3.8/site-packages/nbclient/client.py", line 558, in async_execute
    await self.async_execute_cell(
  File "/home/lorenzf/git/data-science-practical-approach/venv/lib/python3.8/site-packages/nbclient/client.py", line 862, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "/home/lorenzf/git/data-science-practical-approach/venv/lib/python3.8/site-packages/nbclient/client.py", line 765, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
travel_df[travel_df.Comments.str.lower().str.contains('rain')]
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mValueError[0m                                Traceback (most recent call last)
[0;32m/tmp/ipykernel_6376/1298831137.py[0m in [0;36m<module>[0;34m[0m
[0;32m----> 1[0;31m [0mtravel_df[0m[0;34m[[0m[0mtravel_df[0m[0;34m.[0m[0mComments[0m[0;34m.[0m[0mstr[0m[0;34m.[0m[0mlower[0m[0;34m([0m[0;34m)[0m[0;34m.[0m[0mstr[0m[0;34m.[0m[0mcontains[0m[0;34m([0m[0;34m'rain'[0m[0;34m)[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m
[0m
[0;32m~/git/data-science-practical-approach/venv/lib/python3.8/site-packages/pandas/core/frame.py[0m in [0;36m__getitem__[0;34m(self, key)[0m
[1;32m   3446[0m [0;34m[0m[0m
[1;32m   3447[0m         [0;31m# Do we have a (boolean) 1d indexer?[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 3448[0;31m         [0;32mif[0m [0mcom[0m[0;34m.[0m[0mis_bool_indexer[0m[0;34m([0m[0mkey[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   3449[0m             [0;32mreturn[0m [0mself[0m[0;34m.[0m[0m_getitem_bool_array[0m[0;34m([0m[0mkey[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m   3450[0m [0;34m[0m[0m

[0;32m~/git/data-science-practical-approach/venv/lib/python3.8/site-packages/pandas/core/common.py[0m in [0;36mis_bool_indexer[0;34m(key)[0m
[1;32m    137[0m                     [0;31m# Don't raise on e.g. ["A", "B", np.nan], see[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[1;32m    138[0m                     [0;31m#  test_loc_getitem_list_of_labels_categoricalindex_with_na[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 139[0;31m                     [0;32mraise[0m [0mValueError[0m[0;34m([0m[0mna_msg[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    140[0m                 [0;32mreturn[0m [0;32mFalse[0m[0;34m[0m[0;34m[0m[0m
[1;32m    141[0m             [0;32mreturn[0m [0;32mTrue[0m[0;34m[0m[0;34m[0m[0m

[0;31mValueError[0m: Cannot mask with non-boolean array containing NA / NaN values
ValueError: Cannot mask with non-boolean array containing NA / NaN values

